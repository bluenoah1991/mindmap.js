{"version":3,"sources":["../src/Node.js"],"names":["Node","opts","nodes","parentNode","link","line","element","$","linkRadius","gapWidth","gapHeight","box","marginTop","elementMarginTop","marginBottom","elementMarginBottom","height","elementHeight","orientation","width","elementWidth","_calcElementHeight","x","y","_getLinkPosition","mount","undefined","open","radius","scene","addBox","x1","y1","_getConnectionPosition","x2","y2","filter","node","isShow","length","childHeight","i","child","_calcHeight","currentHeight","startX","centerY","startY","_getLinkExternalPosition","startY_","reset","_adjustLink","_adjustLine","_adjustPosition","setPosition","push","setTimeout","_createLink","_createLine","render","bind","show","switch","getRootNode","hide","close","show_"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;AAEA;;;;AACA;;;;;;;;IAEqBA,I;AACjB,kBAAYC,IAAZ,EAAiB;AAAA;;AACb,aAAKC,KAAL,GAAa,EAAb;AACA,aAAKC,UAAL,GAAkB,IAAlB;AACA,aAAKC,IAAL,GAAY,IAAZ;AACA;AACA,aAAKC,IAAL,GAAY,IAAZ;;AAEA;AACA,aAAKJ,IAAL,GAAYA,QAAQ,EAApB;AACA,aAAKK,OAAL,GAAe,KAAKL,IAAL,CAAUK,OAAV,IAAqBC,EAAE,eAAF,CAApC;AACA,aAAKC,UAAL,GAAkB,KAAKP,IAAL,CAAUO,UAAV,IAAwB,CAA1C;AACA,aAAKC,QAAL,GAAgB,KAAKR,IAAL,CAAUQ,QAAV,IAAsB,EAAtC;AACA,aAAKC,SAAL,GAAiB,KAAKT,IAAL,CAAUS,SAAV,IAAuB,EAAxC;AACA,aAAKC,GAAL,GAAW,aAAQ,KAAKL,OAAb,CAAX;AACH;;;;2CAEkBK,G,EAAI;AACnB,gBAAIC,YAAYD,IAAIE,gBAAJ,EAAhB;AACA,gBAAIC,eAAeH,IAAII,mBAAJ,EAAnB;AACA,gBAAIC,SAASL,IAAIM,aAAJ,EAAb;AACA,mBAAOD,SAASJ,SAAT,GAAqBE,YAA5B;AACH;;AAED;;;;iDAE4C;AAAA,gBAArBI,WAAqB,uEAAP,MAAO;;AACxC,gBAAIC,QAAQ,KAAKR,GAAL,CAASS,YAAT,EAAZ;AACA,gBAAIJ,SAAS,KAAKK,kBAAL,CAAwB,KAAKV,GAA7B,CAAb;AACA,gBAAGO,eAAe,MAAlB,EAAyB;AACrB,oBAAII,IAAI,KAAKX,GAAL,CAASW,CAAjB;AACA,oBAAIC,IAAI,KAAKZ,GAAL,CAASY,CAAT,GAAaP,SAAS,CAA9B;AACA,uBAAO,CAACM,CAAD,EAAIC,CAAJ,CAAP;AACH;AACJ;;;2CAEsC;AAAA,gBAAtBL,WAAsB,uEAAR,OAAQ;;AACnC,gBAAIC,QAAQ,KAAKR,GAAL,CAASS,YAAT,EAAZ;AACA,gBAAIJ,SAAS,KAAKK,kBAAL,CAAwB,KAAKV,GAA7B,CAAb;AACA,gBAAGO,eAAe,OAAlB,EAA0B;AACtB,oBAAII,IAAI,KAAKX,GAAL,CAASW,CAAT,GAAaH,KAAb,GAAqB,KAAKX,UAAlC;AACA,oBAAIe,IAAI,KAAKZ,GAAL,CAASY,CAAT,GAAaP,SAAS,CAA9B;AACA,uBAAO,CAACM,CAAD,EAAIC,CAAJ,CAAP;AACH;AACJ;;;mDAE8C;AAAA,gBAAtBL,WAAsB,uEAAR,OAAQ;;AAAA,oCAC9B,KAAKM,gBAAL,CAAsBN,WAAtB,CAD8B;AAAA;AAAA,gBACtCI,CADsC;AAAA,gBACnCC,CADmC;;AAE3C,gBAAGL,eAAe,OAAlB,EAA0B;AACtB,uBAAO,CAACI,IAAI,KAAKd,UAAV,EAAsBe,CAAtB,CAAP;AACH;AACJ;;AAED;;;;sCAEkC;AAAA,gBAAtBL,WAAsB,uEAAR,OAAQ;;AAC9B,gBAAG,KAAKP,GAAL,CAASc,KAAT,IAAkB,KAAKrB,IAAL,IAAasB,SAAlC,EAA4C;AAAA,wCAC3B,KAAKF,gBAAL,CAAsBN,WAAtB,CAD2B;AAAA;AAAA,oBACnCI,CADmC;AAAA,oBAChCC,CADgC;;AAExC,qBAAKnB,IAAL,GAAY,mBAAS,IAAT,EAAe;AACvBuB,0BAAM,IADiB;AAEvBC,4BAAQ,KAAKpB;AAFU,iBAAf,CAAZ;AAIA,qBAAKG,GAAL,CAASkB,KAAT,CAAeC,MAAf,CAAsB,KAAK1B,IAAL,CAAUO,GAAhC,EAAqCW,CAArC,EAAwCC,CAAxC,EAA2C,CAA3C;AACH;AACJ;;;oCAEWQ,E,EAAIC,E,EAAyB;AAAA,gBAArBd,WAAqB,uEAAP,MAAO;;AACrC,gBAAG,KAAKP,GAAL,CAASc,KAAT,IAAkB,KAAKpB,IAAL,IAAaqB,SAAlC,EAA4C;AAAA,4CACzB,KAAKO,sBAAL,CAA4Bf,WAA5B,CADyB;AAAA;AAAA,oBACnCgB,EADmC;AAAA,oBAC/BC,EAD+B;;AAExC,qBAAK9B,IAAL,GAAY,mBAAS;AACjB0B,wBAAIA,EADa,EACTC,IAAIA,EADK;AAEjBE,wBAAIA,EAFa,EAETC,IAAIA;AAFK,iBAAT,CAAZ;AAIA,qBAAKxB,GAAL,CAASkB,KAAT,CAAeC,MAAf,CAAsB,KAAKzB,IAAL,CAAUM,GAAhC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAAC,CAA5C;AACH;AACJ;;AAED;;;;sCAEa;AACT,gBAAIK,SAAS,CAAb;AACA,gBAAId,QAAQ,iBAAEkC,MAAF,CAAS,KAAKlC,KAAd,EAAqB,UAASmC,IAAT,EAAc;AAC3C,uBAAOA,KAAKC,MAAL,EAAP;AACH,aAFW,CAAZ;AAGA,gBAAGpC,MAAMqC,MAAN,GAAe,CAAlB,EAAoB;AAChB,oBAAIC,cAAc,CAAlB;AACA,qBAAI,IAAIC,CAAR,IAAavC,KAAb,EAAmB;AACf,wBAAIwC,QAAQxC,MAAMuC,CAAN,CAAZ;AACAD,mCAAeE,MAAMC,WAAN,EAAf;AACH;AACDH,+BAAe,CAACtC,MAAMqC,MAAN,GAAe,CAAhB,IAAqB,KAAK7B,SAAzC;AACA,oBAAIkC,gBAAgB,KAAKvB,kBAAL,CAAwB,KAAKV,GAA7B,CAApB;AACAK,yBAASwB,cAAcI,aAAd,GAA8BJ,WAA9B,GAA4CI,aAArD;AACH,aATD,MASO;AACH5B,yBAAS,KAAKK,kBAAL,CAAwB,KAAKV,GAA7B,CAAT;AACH;AACD,mBAAOK,MAAP;AACH;;;0CAEgB;AACb,gBAAIA,SAAS,KAAK2B,WAAL,EAAb;AACA,gBAAIE,SAAS,KAAKlC,GAAL,CAASW,CAAT,GAAa,KAAKX,GAAL,CAASS,YAAT,EAAb,GAAuC,KAAKX,QAAzD;AACA,gBAAIqC,UAAU,KAAKnC,GAAL,CAASY,CAAT,GAAa,KAAKF,kBAAL,CAAwB,KAAKV,GAA7B,IAAoC,CAA/D;AACA,gBAAIoC,SAASD,UAAU9B,SAAS,CAAhC;;AAJa,wCAME,KAAKgC,wBAAL,EANF;AAAA;AAAA,gBAMRjB,EANQ;AAAA,gBAMJC,EANI;;AAQb,iBAAI,IAAIS,CAAR,IAAa,KAAKvC,KAAlB,EAAwB;AACpB,oBAAImC,OAAO,KAAKnC,KAAL,CAAWuC,CAAX,CAAX;AACA,oBAAIQ,UAAUF,SAAU,CAACV,KAAKM,WAAL,KAAqB,KAAKtB,kBAAL,CAAwBgB,KAAK1B,GAA7B,CAAtB,IAA2D,CAAnF;AACA0B,qBAAKa,KAAL,CAAWL,MAAX,EAAmBI,OAAnB;AACAZ,qBAAKc,WAAL;AACAd,qBAAKe,WAAL,CAAiBrB,EAAjB,EAAqBC,EAArB;AACAK,qBAAKgB,eAAL;AACAN,0BAAUV,KAAKM,WAAL,KAAqB,KAAKjC,SAApC;AACH;AACJ;;;sCAEY;AACT,gBAAG,KAAKN,IAAL,IAAasB,SAAhB,EAA0B;AAAA,wCACT,KAAKF,gBAAL,EADS;AAAA;AAAA,oBACjBF,CADiB;AAAA,oBACdC,CADc;;AAEtB,qBAAKnB,IAAL,CAAU8C,KAAV,CAAgB5B,CAAhB,EAAmBC,CAAnB;AACH;AACJ;;;oCAEWQ,E,EAAIC,E,EAAG;AACf,gBAAG,KAAK3B,IAAL,IAAaqB,SAAhB,EAA0B;AAAA,6CACP,KAAKO,sBAAL,EADO;AAAA;AAAA,oBACjBC,EADiB;AAAA,oBACbC,EADa;;AAEtB,qBAAK9B,IAAL,CAAU6C,KAAV,CAAgBnB,EAAhB,EAAoBC,EAApB,EAAwBE,EAAxB,EAA4BC,EAA5B;AACH;AACJ;;AAED;;;;8BAEMb,C,EAAGC,C,EAAE;AACP,iBAAKZ,GAAL,CAAS2C,WAAT,CAAqBhC,CAArB,EAAwBC,CAAxB;AACH;;;qCAEYc,I,EAAK;AACd;AACA,iBAAKnC,KAAL,CAAWqD,IAAX,CAAgBlB,IAAhB;AACA,gBAAG,CAACA,KAAK1B,GAAL,CAASc,KAAb,EAAmB;AACf,qBAAKd,GAAL,CAASkB,KAAT,CAAeC,MAAf,CAAsBO,KAAK1B,GAA3B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC;AACH;AACD0B,iBAAKlC,UAAL,GAAkB,IAAlB;;AAEAqD,uBAAW,YAAU;AACjB;AACA,qBAAKC,WAAL;;AAFiB,6CAGF,KAAKT,wBAAL,EAHE;AAAA;AAAA,oBAGZjB,EAHY;AAAA,oBAGRC,EAHQ;;AAIjBK,qBAAKqB,WAAL,CAAiB3B,EAAjB,EAAqBC,EAArB;;AAEA;AACA,qBAAKqB,eAAL;AACA,qBAAK1C,GAAL,CAASkB,KAAT,CAAe8B,MAAf;AACH,aATU,CASTC,IATS,CASJ,IATI,CAAX,EASc,CATd;AAUH;;;+BAEK;AACF,iBAAI,IAAInB,CAAR,IAAa,KAAKvC,KAAlB,EAAwB;AACpB,oBAAImC,OAAO,KAAKnC,KAAL,CAAWuC,CAAX,CAAX;AACAJ,qBAAK1B,GAAL,CAASkD,IAAT;AACA,oBAAGxB,KAAKhC,IAAL,IAAaqB,SAAhB,EAA0B;AACtBW,yBAAKhC,IAAL,CAAUM,GAAV,CAAckD,IAAd;AACH;AACD,oBAAGxB,KAAKjC,IAAL,IAAasB,SAAhB,EAA0B;AACtBW,yBAAKjC,IAAL,CAAUO,GAAV,CAAckD,IAAd;AACA,wBAAGxB,KAAKjC,IAAL,CAAUuB,IAAb,EAAkB;AACdU,6BAAKjC,IAAL,CAAU0D,MAAV,CAAiB,IAAjB;AACAzB,6BAAKV,IAAL;AACH;AACJ;AACJ;AACD;AACA,iBAAKoC,WAAL,GAAmBV,eAAnB;AACA,iBAAK1C,GAAL,CAASkB,KAAT,CAAe8B,MAAf;AACH;;;gCAEM;AACH,iBAAI,IAAIlB,CAAR,IAAa,KAAKvC,KAAlB,EAAwB;AACpB,oBAAImC,OAAO,KAAKnC,KAAL,CAAWuC,CAAX,CAAX;AACAJ,qBAAK1B,GAAL,CAASqD,IAAT;AACA,oBAAG3B,KAAKjC,IAAL,IAAasB,SAAhB,EAA0B;AACtBW,yBAAKjC,IAAL,CAAUO,GAAV,CAAcqD,IAAd;AACH;AACD,oBAAG3B,KAAKhC,IAAL,IAAaqB,SAAhB,EAA0B;AACtBW,yBAAKhC,IAAL,CAAUM,GAAV,CAAcqD,IAAd;AACH;AACD3B,qBAAK4B,KAAL;AACH;AACD;AACA,iBAAKF,WAAL,GAAmBV,eAAnB;AACA,iBAAK1C,GAAL,CAASkB,KAAT,CAAe8B,MAAf;AACH;;;iCAEO;AACJ,mBAAO,KAAKhD,GAAL,CAASuD,KAAhB;AACH;;;sCAEY;AACT,gBAAG,KAAK/D,UAAL,IAAmBuB,SAAtB,EAAgC;AAC5B,uBAAO,KAAKvB,UAAL,CAAgB4D,WAAhB,EAAP;AACH,aAFD,MAEO;AACH,uBAAO,IAAP;AACH;AACJ;;;;;;kBA7MgB/D,I","file":"Node.js","sourcesContent":["import _ from 'lodash';\r\nimport {Box} from 'box.js';\r\n\r\nimport Link from './Link';\r\nimport Line from './Line';\r\n\r\nexport default class Node{\r\n    constructor(opts){\r\n        this.nodes = [];\r\n        this.parentNode = null;\r\n        this.link = null;\r\n        // from parent node to this node\r\n        this.line = null;\r\n\r\n        // Options\r\n        this.opts = opts || {};\r\n        this.element = this.opts.element || $('<h1>Node</h1>');\r\n        this.linkRadius = this.opts.linkRadius || 8;\r\n        this.gapWidth = this.opts.gapWidth || 50;\r\n        this.gapHeight = this.opts.gapHeight || 30;\r\n        this.box = new Box(this.element);\r\n    }\r\n\r\n    _calcElementHeight(box){\r\n        let marginTop = box.elementMarginTop();\r\n        let marginBottom = box.elementMarginBottom();\r\n        let height = box.elementHeight();\r\n        return height + marginTop + marginBottom;\r\n    }\r\n\r\n    // Position\r\n\r\n    _getConnectionPosition(orientation = 'left'){\r\n        let width = this.box.elementWidth();\r\n        let height = this._calcElementHeight(this.box);\r\n        if(orientation == 'left'){\r\n            let x = this.box.x;\r\n            let y = this.box.y + height / 2;\r\n            return [x, y];\r\n        }\r\n    }\r\n\r\n    _getLinkPosition(orientation = 'right'){\r\n        let width = this.box.elementWidth();\r\n        let height = this._calcElementHeight(this.box);\r\n        if(orientation == 'right'){\r\n            let x = this.box.x + width + this.linkRadius;\r\n            let y = this.box.y + height / 2;\r\n            return [x, y];\r\n        }\r\n    }\r\n\r\n    _getLinkExternalPosition(orientation = 'right'){\r\n        let [x, y] = this._getLinkPosition(orientation);\r\n        if(orientation == 'right'){\r\n            return [x + this.linkRadius, y];\r\n        }\r\n    }\r\n\r\n    // Create widget\r\n\r\n    _createLink(orientation = 'right'){\r\n        if(this.box.mount && this.link == undefined){\r\n            let [x, y] = this._getLinkPosition(orientation);\r\n            this.link = new Link(this, {\r\n                open: true,\r\n                radius: this.linkRadius\r\n            });\r\n            this.box.scene.addBox(this.link.box, x, y, 0);\r\n        }\r\n    }\r\n\r\n    _createLine(x1, y1, orientation = 'left'){\r\n        if(this.box.mount && this.line == undefined){\r\n            let [x2, y2] = this._getConnectionPosition(orientation);\r\n            this.line = new Line({\r\n                x1: x1, y1: y1,\r\n                x2: x2, y2: y2\r\n            });\r\n            this.box.scene.addBox(this.line.box, 0, 0, -1);\r\n        }\r\n    }\r\n\r\n    // Adjust Position\r\n\r\n    _calcHeight(){\r\n        let height = 0;\r\n        let nodes = _.filter(this.nodes, function(node){\r\n            return node.isShow();\r\n        });\r\n        if(nodes.length > 0){\r\n            let childHeight = 0\r\n            for(var i in nodes){\r\n                let child = nodes[i];\r\n                childHeight += child._calcHeight();\r\n            }\r\n            childHeight += (nodes.length - 1) * this.gapHeight;\r\n            let currentHeight = this._calcElementHeight(this.box);\r\n            height = childHeight > currentHeight ? childHeight : currentHeight;\r\n        } else {\r\n            height = this._calcElementHeight(this.box);\r\n        }\r\n        return height;\r\n    }\r\n\r\n    _adjustPosition(){\r\n        let height = this._calcHeight();\r\n        let startX = this.box.x + this.box.elementWidth() + this.gapWidth;\r\n        let centerY = this.box.y + this._calcElementHeight(this.box) / 2;\r\n        let startY = centerY - height / 2;\r\n\r\n        let [x1, y1] = this._getLinkExternalPosition();\r\n        \r\n        for(var i in this.nodes){\r\n            let node = this.nodes[i];\r\n            let startY_ = startY + ((node._calcHeight() - this._calcElementHeight(node.box)) / 2);\r\n            node.reset(startX, startY_);\r\n            node._adjustLink();\r\n            node._adjustLine(x1, y1);\r\n            node._adjustPosition();\r\n            startY += node._calcHeight() + this.gapHeight;\r\n        }\r\n    }\r\n\r\n    _adjustLink(){\r\n        if(this.link != undefined){\r\n            let [x, y] = this._getLinkPosition();\r\n            this.link.reset(x, y);\r\n        }\r\n    }\r\n\r\n    _adjustLine(x1, y1){\r\n        if(this.line != undefined){\r\n            let [x2, y2] = this._getConnectionPosition();\r\n            this.line.reset(x1, y1, x2, y2);\r\n        }\r\n    }\r\n\r\n    // Publich Methods\r\n\r\n    reset(x, y){\r\n        this.box.setPosition(x, y);\r\n    }\r\n\r\n    addChildNode(node){\r\n        // mount node\r\n        this.nodes.push(node);\r\n        if(!node.box.mount){\r\n            this.box.scene.addBox(node.box, 0, 0, 0);\r\n        }\r\n        node.parentNode = this;\r\n\r\n        setTimeout(function(){\r\n            // create widget\r\n            this._createLink();\r\n            let [x1, y1] = this._getLinkExternalPosition();\r\n            node._createLine(x1, y1);\r\n\r\n            // adjust position\r\n            this._adjustPosition();\r\n            this.box.scene.render();\r\n        }.bind(this), 0);\r\n    }\r\n\r\n    open(){\r\n        for(var i in this.nodes){\r\n            let node = this.nodes[i];\r\n            node.box.show();\r\n            if(node.line != undefined){\r\n                node.line.box.show();\r\n            }\r\n            if(node.link != undefined){\r\n                node.link.box.show();\r\n                if(node.link.open){\r\n                    node.link.switch(true);\r\n                    node.open();\r\n                }\r\n            }\r\n        }\r\n        // adjust position\r\n        this.getRootNode()._adjustPosition();\r\n        this.box.scene.render();\r\n    }\r\n\r\n    close(){\r\n        for(var i in this.nodes){\r\n            let node = this.nodes[i];\r\n            node.box.hide();\r\n            if(node.link != undefined){\r\n                node.link.box.hide();\r\n            }\r\n            if(node.line != undefined){\r\n                node.line.box.hide();\r\n            }\r\n            node.close();\r\n        }\r\n        // adjust position\r\n        this.getRootNode()._adjustPosition();\r\n        this.box.scene.render();\r\n    }\r\n\r\n    isShow(){\r\n        return this.box.show_;\r\n    }\r\n\r\n    getRootNode(){\r\n        if(this.parentNode != undefined){\r\n            return this.parentNode.getRootNode();\r\n        } else {\r\n            return this;\r\n        }\r\n    }\r\n}"]}